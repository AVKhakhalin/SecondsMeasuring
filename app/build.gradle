plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // Подключение плагина для работы с аннотациями (нужно для Room)
    id 'kotlin-kapt'
    // Подключение плагина для удобной парселизации
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "ru.geekbrains.popular.libraries.less_1_homework"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Добавили разрешение на использование Binding
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    //AndroidX
    implementation libs.androidX.appcompat
    //Kotlin
    implementation libs.kotlin.ktx
    implementation libs.kotlin.jdk7
    implementation libs.kotlin.coroutinescore
    implementation libs.kotlin.coroutinesandroid
    //Design
    implementation libs.design.material
    implementation libs.design.constrlayout
    // Test
    testImplementation libs.tests.junit
    androidTestImplementation libs.tests.extjunit
//    androidTestImplementation libs.tests.runner
    androidTestImplementation libs.tests.espressocore
    //implementation fileTree(dir: libs.tests.filetreedir, include: libs.tests.filetreeinclude)
    // Lifecycle
    implementation libs.lifecycle.extensions
        // LiveData
    implementation libs.lifecycle.ktx
        // LiveData для viewModel, viewModelScope
    implementation libs.lifecycle.viewmodel
        // Lifecycles only (without ViewModel or LiveData)
    implementation libs.lifecycle.runtimektx
    implementation libs.lifecycle.process
    implementation libs.lifecycle.java8
/*    // Moxy
    implementation libs.moxy.community
    kapt libs.moxy.compiler
    implementation libs.moxy.ktx
    implementation libs.moxy.androidx */
/*    // Cicerony
    implementation libs.cicerony.runtime */
    // RxJava
    implementation libs.rxJava.android
    implementation libs.rxJava.reactive
/*    // Glide
    implementation libs.glide.runtime
    kapt libs.glide.compiler */
/*    // OkHTTP
    implementation libs.okHTTP.runtime */
    // Retrofit
    implementation libs.retrofit.runtime
    implementation libs.retrofit.gson
    implementation libs.retrofit.rxJava2
//    implementation libs.retrofit.rxJava3 // одновременно с rxJava2 не включать
    implementation libs.retrofit.interceptor
/*    // Room
    implementation libs.room.runtime
    kapt libs.room.compiler
    kapt libs.room.m1Support
    implementation libs.room.rxJava3 */
    // Coroutines
    implementation libs.coroutines.android
    // Dagger
    implementation libs.dagger.daggger
    implementation libs.dagger.runtime
    implementation libs.dagger.support
    kapt libs.dagger.processor
    kapt libs.dagger.compiler
    kapt libs.dagger.addsupport
    // Koin
    //Koin core features
    implementation libs.koin.core
    //Koin main features for Android (Scope,ViewModel ...)
    implementation libs.koin.android
    //Koin Java Compatibility
    implementation libs.koin.compat
    // For Retrofit 2 coroutines
    implementation libs.koin.retrofitcoroutines
    // Koin for Tests
    testImplementation libs.koin.testsandroidx
    testImplementation libs.koin.testsio
}